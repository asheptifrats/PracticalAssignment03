CREATE DATABASE IF NOT EXISTS school;
USE school;


CREATE TABLE IF NOT EXISTS subjects (
    subject_id CHAR(36) PRIMARY KEY,
    subject_name VARCHAR(100) NOT NULL 
);


CREATE TABLE IF NOT EXISTS courses (
    course_id CHAR(36) PRIMARY KEY, 
    course_name VARCHAR(100) NOT NULL, 
    description TEXT, 
    start_date DATE, 
    end_date DATE 
);

DESCRIBE parents;
ALTER TABLE parents MODIFY phone VARCHAR(20);



CREATE TABLE IF NOT EXISTS parents (
    parent_id INT AUTO_INCREMENT PRIMARY KEY, 
    first_name VARCHAR(50), 
    last_name VARCHAR(50), 
    phone VARCHAR(15), 
    email VARCHAR(100) 
);


CREATE TABLE IF NOT EXISTS teachers (
    teacher_id CHAR(36) PRIMARY KEY, 
    first_name VARCHAR(50), 
    last_name VARCHAR(50), 
    phone VARCHAR(15), 
    email VARCHAR(100), 
    subject_id CHAR(36), 
    FOREIGN KEY (subject_id) REFERENCES subjects(subject_id)
);


CREATE TABLE IF NOT EXISTS children (
    child_id CHAR(36) PRIMARY KEY, 
    first_name VARCHAR(50), 
    last_name VARCHAR(50), 
    birth_date DATE, 
    parent_id INT,
    FOREIGN KEY (parent_id) REFERENCES parents(parent_id)
);


CREATE TABLE IF NOT EXISTS attendance (
    attendance_id CHAR(36) PRIMARY KEY, 
    child_id CHAR(36), 
    course_id CHAR(36), 
    date DATE, 
    status ENUM('present', 'absent', 'late'),
    FOREIGN KEY (child_id) REFERENCES children(child_id), 
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
);

CREATE TABLE IF NOT EXISTS grades (
    grade_id CHAR(36) PRIMARY KEY, 
    child_id CHAR(36), 
    subject_id CHAR(36), 
    grade DECIMAL(3,2), 
    date DATE, 
    FOREIGN KEY (child_id) REFERENCES children(child_id), 
    FOREIGN KEY (subject_id) REFERENCES subjects(subject_id)
);


CREATE TABLE IF NOT EXISTS payments (
    payment_id CHAR(36) PRIMARY KEY, 
    parent_id INT, 
    amount DECIMAL(10,2), 
    payment_date DATE, 
    course_id CHAR(36), 
    FOREIGN KEY (parent_id) REFERENCES parents(parent_id), 
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
);


CREATE TABLE IF NOT EXISTS audiences (
    audience_id CHAR(36) PRIMARY KEY, 
    room_number VARCHAR(10) NOT NULL, 
    capacity INT
);


CREATE TABLE IF NOT EXISTS alumni (
    alumni_id CHAR(36) PRIMARY KEY, 
    child_id CHAR(36), 
    graduation_year YEAR, 
    FOREIGN KEY (child_id) REFERENCES children(child_id)
);

SELECT * FROM parents;

ALTER TABLE parents MODIFY phone VARCHAR(20);
ALTER TABLE teachers MODIFY phone VARCHAR(20);
